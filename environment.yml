name: rl-lab
channels:
  - pytorch
  - conda-forge
  - defaults

dependencies:
  # Core Python
  - python=3.10

  # Core ML/Scientific Computing (conda-managed for better compatibility)
  - pytorch>=2.0.0
  - torchvision
  # Note: CUDA removed for macOS/Apple Silicon compatibility
  # For CUDA support on Linux, use environment-linux-cuda.yml instead
  - numpy>=1.24.0
  - scipy>=1.11.0
  - scikit-learn>=1.3.0

  # Data handling and visualization
  - pandas>=2.0.0
  - matplotlib>=3.7.0
  - seaborn>=0.12.0
  - pillow>=10.0.0
  - imageio>=2.31.0

  # Configuration and utilities
  - pyyaml>=6.0
  - tqdm>=4.65.0

  # Development tools
  - pytest>=7.3.0
  - black>=23.3.0
  - flake8>=6.0.0
  - mypy>=1.4.0
  - jupyterlab  # for interactive development

  # Git and version control
  - git

  # Pip for packages not available in conda
  - pip

  # Packages that must be installed via pip
  - pip:
    # RL Environments
    - gymnasium>=0.28.0
    - dm-control>=1.0.14
    
    # Logging and monitoring
    - tensorboard>=2.13.0
    - wandb>=0.15.0
    
    # Configuration management  
    - hydra-core>=1.3.0
    
    # Hyperparameter optimization
    - optuna>=3.2.0
    
    # Optional environment dependencies (uncomment as needed)
    # - atari-py>=0.2.9              # For Atari environments
    # - mujoco>=2.3.0                # For MuJoCo environments  
    # - box2d-py>=2.3.5              # For Box2D environments
    # - pybullet>=3.2.5              # For PyBullet environments
    
    # Additional utilities
    - opencv-python>=4.8.0
    
# Notes:
# 1. Use 'conda env create -f environment.yml' to create environment
# 2. Use 'conda env update -f environment.yml' to update existing environment  
# 3. Uncomment optional dependencies as needed for specific environments
# 4. This version is compatible with macOS/Apple Silicon (no CUDA dependencies)
# 5. For Linux with CUDA, use environment-linux-cuda.yml instead
# 6. PyTorch will automatically use MPS acceleration on Apple Silicon if available